apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus-pods
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - watch
      - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus-pods
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus-pods
subjects:
  - kind: ServiceAccount
    name: prometheus
    namespace: default
---
apiVersion: v1
data:
  prometheus.yml: |
    scrape_configs:
      - job_name: prometheus
        static_configs:
          - targets:
            - localhost:9090
      - job_name: grafana
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_pod_name]
            regex: default;grafana
            action: keep
kind: ConfigMap
metadata:
  name: prometheus
---
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: prometheus
  name: prometheus
spec:
  containers:
    - image: prom/prometheus:v2.30.3
      name: prometheus
      volumeMounts:
        - mountPath: /etc/prometheus
          name: config
          readOnly: true
  serviceAccountName: prometheus
  volumes:
    - configMap:
        name: prometheus
      name: config
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
spec:
  ports:
    - port: 9090
  selector:
    app: prometheus
---
apiVersion: v1
data:
  password: cGFzc3dvcmQ=
  username: YWRtaW4=
kind: Secret
metadata:
  name: grafana
type: Opaque
---
apiVersion: v1
data:
  prometheus.yaml: |
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        url: http://prometheus:9090
        isDefault: true
kind: ConfigMap
metadata:
  name: grafana-datasource
---
apiVersion: v1
kind: Pod
metadata:
  name: grafana
spec:
  containers:
    - env:
        - name: GF_SECURITY_ADMIN_USER
          valueFrom:
            secretKeyRef:
              key: username
              name: grafana
        - name: GF_SECURITY_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: grafana
        - name: GF_PATHS_PROVISIONING
          value: /usr/share/grafana/conf/provisioning
      image: grafana/grafana:8.2.2
      name: grafana
      ports:
        - containerPort: 3000
          name: web
      volumeMounts:
        - mountPath: /usr/share/grafana/conf/provisioning/datasources
          name: datasources
          readOnly: true
  volumes:
    - configMap:
        name: grafana-datasource
      name: datasources
